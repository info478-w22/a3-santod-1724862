dir<-"~/Desktop/Pop_Health_Info/GitHub_Files/info478_DiseaseModelling/"
data<-fread(paste0(dir,"Life Expectancy Data.csv"))
str(data)
DATA<-data[,c("Country","Year","Status","Life expectancy","Alcohol","percentage expenditure","Total expenditure",
"BMI","GDP","Income composition of resources","Schooling")]
COR<-cor(na.omit(DATA[,4:11]))
View(COR)
pairs.panels(DATA[,4:11], histogram=TRUE, pch=19)
library("psych")
pairs.panels(DATA[,4:11], histogram=TRUE, pch=19)
colnames(DATA)<-c("Country", "Year", "Status", "Life_expectancy", "Alcohol", "percentage_expenditure",
"Total_expenditure", "BMI", "GDP",  "Income_composition_of_resources", "Schooling")
mgam<-gam(Life_expectancy ~ as.factor(Status)+Year+s(GDP,k=5,fx=TRUE)+s(BMI), data=DATA)
summary(mgam)
plot(mgam)
View(data)
colnames(DATA)<-c("Country", "Year", "Status", "Life_expectancy", "Alcohol", "Percentage_expenditure",
"Total_expenditure", "BMI", "GDP",  "Income_composition_of_resources", "Schooling")
View(DATA)
pairs.panels(DATA[,4:11], histogram=TRUE, pch=19)
mgam<-gam(Life_expectancy ~ as.factor(Status)+Year+s(GDP,k=5,fx=TRUE)+s(BMI), data=DATA)
plot(mgam)
mgam<-gam(Life_expectancy ~ as.factor(Status)+as.factor(Year)+s(GDP,k=5,fx=TRUE)+s(BMI), data=DATA)
summary(mgam)
plot(mgam)
summary(mgam)
mgam<-gam(Life_expectancy ~ as.factor(Status)+Year+s(GDP,k=5,fx=TRUE)+s(BMI), data=DATA)
summary(mgam)
mgam<-gam(Life_expectancy ~ as.factor(Status)+s(Year)+s(GDP,k=5,fx=TRUE)+s(BMI), data=DATA)
summary(mgam)
plot(mgam)
plot(mgam)
plot(mgam)
plot(mgam)
summary(mgam)
mgam<-gam(Life_expectancy ~ as.factor(Status)+s(Year, k = 9 + 1, fx = TRUE)+s(GDP,k=5,fx=TRUE)+s(BMI), data=DATA)
mgam<-gam(Life_expectancy ~ as.factor(Status)+s(Year, k = 9 + 1, fx = TRUE)+s(GDP,k=5,fx=TRUE)+s(BMI), data=DATA)
summary(mgam)
plot(mgam)
plot(mgam)
setwd("~/Desktop/Pop_Health_Info/Final_Project/untitled folder")
accident <- read.csv("US_Accidents.csv")
View(accident)
# All computations for our analysis on Traffic Injury related datasets
library(psych)
describe(accident$State)
describe(accident$Temperature.F.)
library(dplyr)
summarise(accident$State)
summarise(accident)
library(summarytools)
install.packages(summarytools)
install.packages("summarytools")
frequency(accident$State)
library(summarytools)
freq(accident$State)
library(janitor)
install.packages("janitor")
library(tidyverse)
hist_state <- ggplot(accident, aes(x = Temperature.F.)) +
geom_histogram(color = "black", fill = "white")
hist_state
hist_state <- ggplot(accident, aes(x = Temperature.F.)) +
geom_histogram(color = "black", fill = "white", bins = 10)
hist
hist_state
hist_state <- ggplot(accident, aes(x = Temperature.F.)) +
geom_histogram(color = "black", fill = "white", bins = 20)
hist_state
hist_states_freq <- ggplot(accident, aes(x = State)) +
geom_freqpoly(color = "black", fill = "white")
hist_states_freq
hist_states_freq <- ggplot(accident, aes(x = State)) +
geom_freqpoly(color = "black", stat = 'count')
hist_states_freq
bar_states <- ggplot(accident, aes(x = State)) +
geom_bar()
bar_states
us_accident <- read.csv("Data/accident_data_large.csv")
us_accident <- read.csv("~/Data/accident_data_large.csv")
setwd("~/Desktop/Pop_Health_Info/Final_Project/info478_final_group5/EPA")
us_accident <- read.csv("~/Data/accident_data_large.csv")
gbd_data <- read.csv("Data/GBD_data.csv")
us_accident <- read.csv("../Data/accident_data_large.csv")
View(us_accident)
hist_states_freq
# Bar Graph on the distribution of traffic accident by state
hist_states_freq <- ggplot(us_accident, aes(x = State)) +
geom_freqpoly(color = "black")
hist_states_freq
# Bar Graph on the distribution of traffic accident by state
hist_states_freq <- ggplot(us_accident, aes(x = State)) +
geom_freqpoly(color = "black", stat = 'count')
hist_states_freq
source(analysis.R)
setwd("~/Desktop/Pop_Health_Info/Final_Project/info478_final_group5/EPA")
source(analysis.R)
source('analysis.R')
source('EPA/analysis.R')
source('analysis.R')
source('analysis.R')
hist_state
hist_states_freq
hist_states_freq <- ggplot(accident, aes(x = State)) +
geom_freqpoly(color = "black", stat = 'count')
hist_states_freq
ggplot(accident, aes(x = State)) +
geom_freqpoly(color = "black", stat = 'count')
bar_states <- ggplot(accident, aes(x = State)) +
geom_bar()
bar_states
# Bar Graph on the distribution of traffic accident by state
bar_states <- ggplot(us_accident, aes(x = State)) +
geom_bar()
bar_states
getwd()
gbd_age <- read_csv('../Data/gbd_age.csv')
source('analysis.R')
source('/analysis.R')
source('analysis.R')
bar_states
# Bar Graph on the distribution of traffic accident by state
bar_states <- ggplot(accidents_by_temp, aes(x = State)) +
geom_freqpoly(color = "black", stat = 'count')
bar_states <- ggplot(accident, aes(x = State)) +
geom_bar() +
geom_label(y = "Number of Accidents")
bar_states
bar_states <- ggplot(accident, aes(x = State)) +
geom_bar() +
geom_label(aes(y = "Number of Accidents"))
bar_states
bar_states <- ggplot(accident, aes(x = State)) +
geom_bar() +
labs(title = "Number of Traffic Accidents by State", y = "Amount of Accident")
bar_states
bar_states <- ggplot(accident, aes(x = State)) +
geom_bar() +
labs(title = "Number of Traffic Accidents by State", y = "Amount of Accidents") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
bar_states
bar_states <- ggplot(accident, aes(x = State)) +
geom_bar() +
labs(title = "Number of Traffic Accidents by State", y = "Amount of Accidents") +
theme(axis.text.x = element_text(angle = 180, vjust = 0.5))
bar_states
bar_states <- ggplot(accident, aes(x = State)) +
geom_bar() +
labs(title = "Number of Traffic Accidents by State", y = "Amount of Accidents") +
theme(axis.text.x = element_text(angle = -90, vjust = 0.5))
bar_states
accidents_by_temp <- read_csv('Data/accident_data_large.csv')
gbd_data <- read_csv('Data/GBD_data.csv')
gbd_age <- read_csv('Data/gbd_age.csv')
View(gbd_age)
install.packages("EpiModel")
library(EpiModel)
param <- param.dcm(inf.prob = 0.5, act.rate = c(2))
library("EpiModel")
library(EpiModel)
install.packages("EpiModel", dependencies = TRUE)
library("EpiModel")
library(EpiModel)
require(EpiModel)
install.packages("EpiModel")
library(EpiModel)
param <- param.dcm(inf.prob = 0.5, act.rate = c(2))
install.packages("dcm")
library(dcm)
library(EpiModel)
install.packages("EpiModel", dependencies = TRUE)
install.packages("EpiModel", dependencies = TRUE)
Yes
install.packages("EpiModel", dependencies = TRUE)
library(EpiModel)
param <- param.dcm(inf.prob = 0.5, act.rate = c(2))
init <- init.dcm(s.num = 999, i.num = 1)
install.packages("dcm")
install.packages("dcm")
install.packages("dcm")
install.packages("dcm")
install.packages("EpiModel", dependencies = TRUE)
install.packages("dcm")
require(dcm)
library(dcm)
install.packages("dcm")
param <- param.dcm(inf.prob = 0.5, act.rate = c(2))
source("~/Desktop/Pop_Health_Info/GitHub_Files/info478_DiseaseModelling/infectious_disease_models.R")
source("~/Desktop/Pop_Health_Info/GitHub_Files/info478_DiseaseModelling/infectious_disease_models.R")
source("~/Desktop/Pop_Health_Info/GitHub_Files/info478_DiseaseModelling/infectious_disease_models.R")
source("~/Desktop/Pop_Health_Info/GitHub_Files/info478_DiseaseModelling/infectious_disease_models.R")
source("~/Desktop/Pop_Health_Info/GitHub_Files/info478_DiseaseModelling/infectious_disease_models.R")
library(EpiModel)
source("~/Desktop/Pop_Health_Info/GitHub_Files/info478_DiseaseModelling/infectious_disease_models.R")
param <- param.dcm(inf.prob = 0.5, act.rate = c(2))
install.packages("rlang")
install.packages("rlang")
update.packages(checkBuilt = TRUE, ask = FALSE)
source("~/Desktop/Pop_Health_Info/GitHub_Files/info478_DiseaseModelling/infectious_disease_models.R")
install.packages("glue")
install.packages("network")
install.packages("glue")
install.packages("glue")
source("~/Desktop/Pop_Health_Info/GitHub_Files/info478_DiseaseModelling/infectious_disease_models.R")
param <- param.dcm(inf.prob = 0.5, act.rate = c(2))
init <- init.dcm(s.num = 999, i.num = 1)
control <- control.dcm(type = "SI", nsteps = 365)
mod <- dcm(param, init, control)
mod
plot(mod)
plot(mod)
summary(mod, at=100)
comp_plot(mod, at = 2, digits = 1)
param <- param.dcm(inf.prob = 0.3, act.rate = 1, rec.rate = 0.05)
init <- init.dcm(s.num = 999, i.num = 4)
control <- control.dcm(type = "SIS", nsteps = 500, dt = 0.5)
mod <- dcm(param, init, control)
plot(mod)
plot(mod.dcm)
plot(mod.icm)
plot(mod.dcm, alpha = 0.75, lwd = 4, main = "DCM and ICM Comparison")
plot(mod.icm, qnts = FALSE, sim.lines = FALSE, add = TRUE, mean.lty = 2, legend = FALSE)
dev.off()
param <- param.dcm(inf.prob = 0.9, act.rate = c(1))
init <- init.dcm(s.num = 999, i.num = 1)
control <- control.dcm(type = "SI", nsteps = 365)
mod <- dcm(param, init, control)
mod
plot(mod)
param <- param.dcm(inf.prob = 0.9, act.rate = c(0.1))
init <- init.dcm(s.num = 999, i.num = 1)
control <- control.dcm(type = "SI", nsteps = 365)
mod <- dcm(param, init, control)
mod
plot(mod)
param <- param.dcm(inf.prob = 0.9, act.rate = c(0.01))
init <- init.dcm(s.num = 999, i.num = 1)
control <- control.dcm(type = "SI", nsteps = 365)
mod <- dcm(param, init, control)
mod
plot(mod)
param <- param.dcm(inf.prob = 0.9, act.rate = c(0.05))
init <- init.dcm(s.num = 999, i.num = 1)
control <- control.dcm(type = "SI", nsteps = 365)
mod <- dcm(param, init, control)
mod
plot(mod)
param <- param.dcm(inf.prob = 1, act.rate = c(0.05))
init <- init.dcm(s.num = 999, i.num = 1)
control <- control.dcm(type = "SI", nsteps = 365)
mod <- dcm(param, init, control)
mod
plot(mod)
param <- param.dcm(inf.prob = 5, act.rate = c(0.05))
init <- init.dcm(s.num = 999, i.num = 1)
control <- control.dcm(type = "SI", nsteps = 365)
mod <- dcm(param, init, control)
mod
plot(mod)
param <- param.dcm(inf.prob = 0.5, act.rate = c(0.05))
init <- init.dcm(s.num = 999, i.num = 1)
control <- control.dcm(type = "SI", nsteps = 365)
mod <- dcm(param, init, control)
mod
plot(mod)
param <- param.dcm(inf.prob = 0.25, act.rate = c(0.05))
init <- init.dcm(s.num = 999, i.num = 1)
control <- control.dcm(type = "SI", nsteps = 365)
mod <- dcm(param, init, control)
mod
plot(mod)
param <- param.dcm(inf.prob = 0.25, act.rate = c(1))
init <- init.dcm(s.num = 999, i.num = 1)
control <- control.dcm(type = "SI", nsteps = 365)
mod <- dcm(param, init, control)
mod
plot(mod)
param <- param.dcm(inf.prob = 0.01, act.rate = c(1))
init <- init.dcm(s.num = 999, i.num = 1)
control <- control.dcm(type = "SI", nsteps = 365)
mod <- dcm(param, init, control)
mod
plot(mod)
param <- param.dcm(inf.prob = 0.1, act.rate = c(1))
init <- init.dcm(s.num = 999, i.num = 1)
control <- control.dcm(type = "SI", nsteps = 365)
mod <- dcm(param, init, control)
mod
plot(mod)
param <- param.dcm(inf.prob = 0.3, act.rate = 1, rec.rate = 0.05)
init <- init.dcm(s.num = 999, i.num = 4)
control <- control.dcm(type = "SIS", nsteps = 500, dt = 0.5)
mod <- dcm(param, init, control)
plot(mod)
param <- param.dcm(inf.prob = 0.3, act.rate = 1, rec.rate = 0.5)
init <- init.dcm(s.num = 999, i.num = 4)
control <- control.dcm(type = "SIS", nsteps = 500, dt = 0.5)
mod <- dcm(param, init, control)
plot(mod)
param <- param.dcm(inf.prob = 0.9, act.rate = 1, rec.rate = 0.5)
init <- init.dcm(s.num = 999, i.num = 4)
control <- control.dcm(type = "SIS", nsteps = 500, dt = 0.5)
mod <- dcm(param, init, control)
plot(mod)
param <- param.dcm(inf.prob = 0.3, act.rate = 0.1, rec.rate = 0.05)
init <- init.dcm(s.num = 999, i.num = 4,r.num = 0)
control <- control.dcm(type = "SIR", nsteps = 500, dt = 0.5)
mod <- dcm(param, init, control)
plot(mod)
library("HSAUR")
library("MASS")
library(tidyverse)
## Calculate ODDS Ratio
data("BCG")
## Example of single calculation
odds_tb_1948 <- BCG$BCGTB[1] / BCG$NoVaccTB[1]
source("~/Desktop/Pop_Health_Info/GitHub_Files/a2-santod-1724862/analysis.R")
relrisk_odds <- ggplot(BCG, aes(x = RelRiskVaccTB, y = OddsRatioVaccTB)) +
geom_point() +
labs(title = "Odds Ratio VS Relative Risk (Vacc)") +
geom_smooth(method=lm, color = "green")
View(hist_BCG_OR_NoVac)
smoke_risk_bwt <- check_risk_bwt(birthwt, "smoke")
View(birthwt)
before_20_risk_bwt <- check_risk_bwt(birthwt, "baby_before_20")
smoke_risk_bwt <- check_risk_bwt(birthwt, "smoke")
hyper_risk_bwt <- check_risk_bwt(birthwt, "ht")
zero_visit_risk_bwt <- check_risk_bwt(birthwt, "zero_pre_natal")
before_20_risk_bwt <- check_risk_bwt(birthwt, "baby_before_20")
smoke_risk_bwt <- check_risk_bwt(birthwt, "smoke") %>%
round(digits = 4)
hyper_risk_bwt <- check_risk_bwt(birthwt, "ht") %>%
round(digits = 4)
zero_visit_risk_bwt <- check_risk_bwt(birthwt, "zero_pre_natal") %>%
round(digits = 4)
before_20_risk_bwt <- check_risk_bwt(birthwt, "baby_before_20") %>%
round(digits = 4)
View(BCG)
low_bwt_risk_table <- c(smoke_risk_bwt, hyper_risk_bwt, zero_visit_risk_bwt, before_20_risk_bwt)
view(low_bwt_risk_table)
low_bwt_risk_table <- c(smoker_status = smoke_risk_bwt, hypertension_status = hyper_risk_bwt,
zero_prenatal_visit = zero_visit_risk_bwt, age_less_than_20 = before_20_risk_bwt)
view(low_bwt_risk_table)
bar_graph_low_bwt <- ggplot(data = low_bwt_risk_table, aes(x = x)) +
geom_bar(stat = "identity")
low_bwt_risk_table <- data.frame(c(smoker_status = smoke_risk_bwt, hypertension_status = hyper_risk_bwt,
zero_prenatal_visit = zero_visit_risk_bwt, age_less_than_20 = before_20_risk_bwt))
View(low_bwt_risk_table)
View(low_bwt_risk_table)
low_bwt_risk_table <- data.frame(c(smoker_status = smoke_risk_bwt, hypertension_status = hyper_risk_bwt,
zero_prenatal_visit = zero_visit_risk_bwt, age_less_than_20 = before_20_risk_bwt)) %>%
colnames("Relative Risk")
low_bwt_risk_table <- data.frame(c(smoker_status = smoke_risk_bwt, hypertension_status = hyper_risk_bwt,
zero_prenatal_visit = zero_visit_risk_bwt, age_less_than_20 = before_20_risk_bwt))
low_bwt_risk_table <- low_bwt_risk_table %>%
colnames("Relative Risk")
low_bwt_risk_table <- data.frame(relative_risk = c(smoker_status = smoke_risk_bwt, hypertension_status = hyper_risk_bwt,
zero_prenatal_visit = zero_visit_risk_bwt, age_less_than_20 = before_20_risk_bwt))
bar_graph_low_bwt <- ggplot(data = low_bwt_risk_table, aes(x = x)) +
geom_bar(stat = "identity")
bar_graph_low_bwt <- ggplot(data = low_bwt_risk_table, aes(x = relative_risk)) +
geom_bar(stat = "identity")
bar_graph_low_bwt
View(low_bwt_risk_table)
low_bwt_risk_table <- data.frame(relative_risk = c(smoke_risk_bwt, hyper_risk_bwt, zero_visit_risk_bwt, before_20_risk_bwt),
status = c("smoker_status", "hypertesnsion_status", "zero_prenatal_visit", "age_less_than_20"))
bar_graph_low_bwt <- ggplot(data = low_bwt_risk_table, aes(x = relative_risk, y = status)) +
geom_bar(stat = "identity")
bar_graph_low_bwt
bar_graph_low_bwt <- ggplot(data = low_bwt_risk_table, aes(x = relative_risk, y = status)) +
geom_bar(stat = "identity") + geom_text(aes(label = relative_risk))
bar_graph_low_bwt
bar_graph_low_bwt <- ggplot(data = low_bwt_risk_table, aes(x = relative_risk, y = status)) +
geom_bar(stat = "identity") + geom_text(aes(label = relative_risk), color = "white", nudge_x = -10)
bar_graph_low_bwt
bar_graph_low_bwt <- ggplot(data = low_bwt_risk_table, aes(x = relative_risk, y = status)) +
geom_bar(stat = "identity") + geom_text(aes(label = relative_risk), color = "white", nudge_x = -1)
bar_graph_low_bwt
bar_graph_low_bwt <- ggplot(data = low_bwt_risk_table, aes(x = relative_risk, y = status)) +
geom_bar(stat = "identity") + geom_text(aes(label = relative_risk), color = "white", nudge_x = -0.5)
bar_graph_low_bwt
bar_graph_low_bwt <- ggplot(data = low_bwt_risk_table, aes(x = relative_risk, y = status)) +
geom_bar(stat = "identity") + geom_text(aes(label = relative_risk), color = "white", nudge_x = -0.5) +
labs(title = "Relative Risk Based On Various Factors")
bar_graph_low_bwt <- ggplot(data = low_bwt_risk_table, aes(x = relative_risk, y = status)) +
geom_bar(stat = "identity") + geom_text(aes(label = relative_risk), color = "white", nudge_x = -0.5) +
labs(title = "Relative Risk Based On Various Factors") + xlab("Relative Risk")
bar_graph_low_bwt
source("analysis.R")
library(tidyverse)
library(patchwork)
library(kableExtra)
kable(or_rr_table, caption = "Calculated Odds Ratio and Relative Risk from 13 studies (1948-1980)", align = "ccccccc", padding = 2)
or_rr_table <- BCG %>%
select("Study", "Latitude", "Year", "OddsRatioVaccTB", "OddsRatioNoVaccTB", "RelRiskVaccTB", "RelRiskNoVaccTB")
kable(or_rr_table, caption = "Calculated Odds Ratio and Relative Risk from 13 studies (1948-1980)", align = "ccccccc", padding = 2)
kable(head(birthwt), align = "cccccccccccc", padding = 5)
kable(head(birthwt), align = "cccccccccccc", padding = 10)
kable(head(birthwt), align = "cccccccccccc", padding = 50)
bar_graph_low_bwt
install.packages
install.packages("epitools")
library(bdendo)
library(epitools)
cancer <- data("bdendo")
cancer <- data(bdendo)
library(epitools)
library(tidyverse)
install.packages("epi")
install.packages("Epi")
library(Epi)
cancer <- data(bdendo)
remove(cancer)
cancer <- data(bdendo)
data(bdendo)
remove(cancer)
bdendo <- rename(cancer)
View(bdendo)
or_cancer_hyper <- epitab(bdendo$hyp, method = "oddsratio")
or_cancer_hyper <- epitab(bdendo$d,bdendo$hyp, method = "oddsratio")
View(or_cancer_hyper)
or_cancer_hyper
epitab(bdendo$d,bdendo$hyp, method = "oddsratio")
epitab(bdendo$d, bdendo$gall, method = "riskratio")
epitab(bdendo$d, bdendo$gall, method = "oddsratio")
epitab(bdendo$d, bdendo$ob, method = "oddsratio")
epitab(birthwt$low, birthwt$smoke, method = "riskratio")
or_obesity_cancer <- epitab(bdendo$d, bdendo$ob, method = "oddsratio")
or_obesity_cancer$measure
or_obesity_cancer$tab
or_obesity_cancer$pvalue
or_hyp_cancer <- epitab(bdendo$d, bdendo$hyp, method = "oddsratio")
or_gall_cancer <- epitab(bdendo$d, bdendo$gall, method = "oddsratio")
or_obesity_cancer <- epitab(bdendo$d, bdendo$ob, method = "oddsratio")
or_hyp_cancer <- epitab(bdendo$d, bdendo$hyp, method = "oddsratio")
or_gall_cancer <- epitab(bdendo$d, bdendo$gall, method = "oddsratio")
or_obesity_cancer <- epitab(bdendo$d, bdendo$ob, method = "oddsratio")
or_cancer_hyper
view(or_hyp_cancer$tab)
View(BCG)
## Mutating new column into BCG dataset
BCG <- BCG %>%
mutate(OddsRatioVaccTB = (BCGTB / NoVacc) / (BCGVacc * NoVaccTB)
)
library(tidyverse)
library(patchwork)
## Mutating new column into BCG dataset
BCG <- BCG %>%
mutate(OddsRatioVaccTB = (BCGTB / NoVacc) / (BCGVacc * NoVaccTB)
)
## Mutating new column into BCG dataset
BCG <- BCG %>%
mutate(OddsRatioVaccTB = (BCGTB / NoVaccTB) / (BCGVacc / (NoVacc - NoVaccTB))
)
BCG <- BCG %>%
mutate(OddsRatioNoVaccTB = 1 / OddsRatioVaccTB)
shiny::runApp('Desktop/OldClassMaterial/InfoAssignments/final-project-jliu6100')
# Fill in the table (except life_expetancy column)
# using a `while()` OR a 'for()' loop and your `increment_lt` function
for (i in 1:nrow(life_table)) {
life_table <- increment_lt(life_table, i)
}
setwd("~/Desktop/Pop_Health_Info/GitHub_Files/a3-santod-1724862")
plot(mod, y = "si.flow", lwd = 4, col = "firebrick",
main = "Disease Incidence", legend = "n")
param <- param.dcm(inf.prob = 0.3, act.rate = 0.1, rec.rate = 0.05)
init <- init.dcm(s.num = 999, i.num = 4,r.num = 0)
library(EpiModel)
param <- param.dcm(inf.prob = 0.3, act.rate = 0.1, rec.rate = 0.05)
init <- init.dcm(s.num = 999, i.num = 4,r.num = 0)
control <- control.dcm(type = "SIR", nsteps = 500, dt = 0.5)
mod <- dcm(param, init, control)
plot(mod)
par(mar = c(3.2, 3, 2, 1), mgp = c(2, 1, 0), mfrow = c(1, 2))
plot(mod, popfrac = FALSE, alpha = 0.5,
lwd = 4, main = "Compartment Sizes")
plot(mod, y = "si.flow", lwd = 4, col = "firebrick",
main = "Disease Incidence", legend = "n")
det_model <- plot(mod, popfrac = FALSE, alpha = 0.5,
lwd = 4, main = "Compartment Sizes")
det_model
setwd("~/Desktop/Pop_Health_Info/GitHub_Files/a3-santod-1724862")
plot(mod, popfrac = FALSE, alpha = 0.5,
lwd = 4, main = "Compartment Sizes")
par(mar = c(3.2, 3, 2, 1), mgp = c(2, 1, 0), mfrow = c(1, 2))
plot(mod, popfrac = FALSE, alpha = 0.5,
lwd = 4, main = "Compartment Sizes")
plot(mod)
param <- param.dcm(inf.prob = 0.3, act.rate = 0.1, rec.rate = 0.05)
init <- init.dcm(s.num = 999, i.num = 4,r.num = 0)
control <- control.dcm(type = "SIR", nsteps = 500, dt = 0.5)
mod <- dcm(param, init, control)
plot(mod)
mod.icm <- icm(param.icm, init.icm, control.icm)
param.icm <- param.icm(inf.prob = c(0.1), act.rate = 0.5, rec.rate = 0.01)
init.icm <- init.icm(s.num = 500, i.num = 1,r.num = 0)
control.icm <- control.icm(type = "SIR", nsims = 100, nsteps = 300)
mod.icm <- icm(param.icm, init.icm, control.icm)
plot(mod.icm)
runApp()
setwd("~/Desktop/Pop_Health_Info/GitHub_Files/a3-santod-1724862")
runApp()
# load packages
library(tidyverse)
library(plotly)
library(shiny)
library(EpiModel)
# --------- DEFINING UI: PUTTING PAGES TOGETHER ----------
ui <- navbarPage(
icm_model
)
runApp()
